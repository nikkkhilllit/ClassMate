/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package app;

import java.awt.Color;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.*;
import java.time.format.DateTimeFormatter;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author Admin
 */
public class MainPage extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    private String loginUsername;
    private static final String DB_PASSWORD="pranav@030429";
    private static final LocalTime currentTime =LocalTime.now();
    public MainPage(String u1) {
        loginUsername=u1;
        initComponents();
        UsernameLabel.setText(loginUsername);
        // Format the time using DateTimeFormatter
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("HH:mm:ss");
        final String formattedTime = currentTime.format(formatter);

        // Set the formatted time to the TimeLabel
        TimeLabel.setText(formattedTime);
        populateTeacherTable();
        populateUpdatesTable();
        populateTimeTable();
        populateExamTable();

    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpexam = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        examTable = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        editExamBtn = new javax.swing.JButton();
        homePanel = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jpupdates = new javax.swing.JPanel();
        updatesLabel = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        updatesTable = new javax.swing.JTable();
        updateBtn = new javax.swing.JButton();
        jptimetable = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        timeTable = new javax.swing.JTable();
        editButton = new javax.swing.JButton();
        NavigationPanel = new javax.swing.JPanel();
        Home = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        updates = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        timetable = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        exam = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        logOutBtn = new javax.swing.JButton();
        UserLoginInfoPanel = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        UsernameLabel = new javax.swing.JLabel();
        TimeLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("MainPage");
        setPreferredSize(new java.awt.Dimension(820, 570));
        setSize(new java.awt.Dimension(543, 385));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jpexam.setBackground(new java.awt.Color(255, 255, 255));

        jScrollPane2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        examTable.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        examTable.setFont(new java.awt.Font("Dubai Medium", 0, 14)); // NOI18N
        examTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Sr No.", "Date", "S.Y.B.Sc. C.S"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        examTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        examTable.setGridColor(new java.awt.Color(0, 0, 0));
        examTable.setName(""); // NOI18N
        examTable.setRowHeight(35);
        examTable.setShowHorizontalLines(true);
        examTable.getTableHeader().setResizingAllowed(false);
        examTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(examTable);
        if (examTable.getColumnModel().getColumnCount() > 0) {
            examTable.getColumnModel().getColumn(0).setPreferredWidth(8);
            examTable.getColumnModel().getColumn(1).setPreferredWidth(10);
            examTable.getColumnModel().getColumn(2).setPreferredWidth(20);
        }

        jLabel5.setBackground(new java.awt.Color(255, 255, 255));
        jLabel5.setFont(new java.awt.Font("Dubai Medium", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(102, 102, 255));
        jLabel5.setText("Exam TimeTable ");

        jLabel6.setBackground(new java.awt.Color(255, 255, 255));
        jLabel6.setFont(new java.awt.Font("Dubai Medium", 1, 14)); // NOI18N
        jLabel6.setText("Third Semester End (External) Examination October-2023");

        jLabel7.setBackground(new java.awt.Color(255, 255, 255));
        jLabel7.setFont(new java.awt.Font("Dubai Medium", 1, 14)); // NOI18N
        jLabel7.setText("A.T.K.T - Regular & Repeater Students.");

        jLabel8.setBackground(new java.awt.Color(255, 255, 255));
        jLabel8.setFont(new java.awt.Font("Dubai Medium", 1, 14)); // NOI18N
        jLabel8.setText("Time :- 11:30 a.m. to 1:30 p.m.");

        editExamBtn.setBackground(new java.awt.Color(79, 66, 255));
        editExamBtn.setFont(new java.awt.Font("Dubai Medium", 1, 12)); // NOI18N
        editExamBtn.setForeground(new java.awt.Color(255, 255, 255));
        editExamBtn.setText("Edit");
        editExamBtn.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        editExamBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        editExamBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editExamBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpexamLayout = new javax.swing.GroupLayout(jpexam);
        jpexam.setLayout(jpexamLayout);
        jpexamLayout.setHorizontalGroup(
            jpexamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpexamLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpexamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpexamLayout.createSequentialGroup()
                        .addGap(0, 122, Short.MAX_VALUE)
                        .addComponent(jLabel6)
                        .addGap(123, 123, 123))
                    .addComponent(jScrollPane2)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpexamLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jpexamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpexamLayout.createSequentialGroup()
                                .addComponent(editExamBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpexamLayout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(184, 184, 184))))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpexamLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel8)
                .addGap(205, 205, 205))
            .addGroup(jpexamLayout.createSequentialGroup()
                .addGap(237, 237, 237)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jpexamLayout.setVerticalGroup(
            jpexamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpexamLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addComponent(editExamBtn)
                .addGap(29, 29, 29))
        );

        getContentPane().add(jpexam, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 45, 610, 470));

        homePanel.setBackground(new java.awt.Color(255, 255, 255));
        homePanel.setPreferredSize(new java.awt.Dimension(480, 404));

        jLabel11.setBackground(new java.awt.Color(255, 255, 255));
        jLabel11.setFont(new java.awt.Font("Dubai Medium", 1, 24)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(102, 102, 255));
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("Welcome to Activity Management");

        jTable1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jTable1.setFont(new java.awt.Font("Dubai Medium", 0, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Teacher", "Subject"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setColumnSelectionAllowed(false);
        jTable1.setGridColor(new java.awt.Color(51, 51, 51));
        jTable1.setRowHeight(40);
        jTable1.setShowGrid(true);
        jTable1.getTableHeader().setResizingAllowed(false);
        jTable1.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
        }

        javax.swing.GroupLayout homePanelLayout = new javax.swing.GroupLayout(homePanel);
        homePanel.setLayout(homePanelLayout);
        homePanelLayout.setHorizontalGroup(
            homePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(homePanelLayout.createSequentialGroup()
                .addContainerGap(121, Short.MAX_VALUE)
                .addGroup(homePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, homePanelLayout.createSequentialGroup()
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 395, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(94, 94, 94))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, homePanelLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(139, 139, 139))))
        );
        homePanelLayout.setVerticalGroup(
            homePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(homePanelLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(230, 230, 230))
        );

        getContentPane().add(homePanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 45, 610, 470));

        jpupdates.setBackground(new java.awt.Color(255, 255, 255));
        jpupdates.setPreferredSize(new java.awt.Dimension(484, 404));

        updatesLabel.setBackground(new java.awt.Color(220, 220, 220));
        updatesLabel.setFont(new java.awt.Font("Dubai Medium", 1, 36)); // NOI18N
        updatesLabel.setForeground(new java.awt.Color(102, 102, 255));
        updatesLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        updatesLabel.setText("Updates");

        updatesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Notice", "Time"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        updatesTable.setGridColor(new java.awt.Color(51, 51, 51));
        updatesTable.setRowHeight(35);
        updatesTable.setShowHorizontalLines(true);
        updatesTable.getTableHeader().setResizingAllowed(false);
        updatesTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane4.setViewportView(updatesTable);
        if (updatesTable.getColumnModel().getColumnCount() > 0) {
            updatesTable.getColumnModel().getColumn(0).setResizable(false);
            updatesTable.getColumnModel().getColumn(0).setPreferredWidth(15);
            updatesTable.getColumnModel().getColumn(1).setResizable(false);
        }

        updateBtn.setBackground(new java.awt.Color(79, 66, 255));
        updateBtn.setFont(new java.awt.Font("Dubai Medium", 1, 14)); // NOI18N
        updateBtn.setForeground(new java.awt.Color(255, 255, 255));
        updateBtn.setText("Update");
        updateBtn.setToolTipText("");
        updateBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.white, java.awt.Color.darkGray));
        updateBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpupdatesLayout = new javax.swing.GroupLayout(jpupdates);
        jpupdates.setLayout(jpupdatesLayout);
        jpupdatesLayout.setHorizontalGroup(
            jpupdatesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpupdatesLayout.createSequentialGroup()
                .addContainerGap(107, Short.MAX_VALUE)
                .addGroup(jpupdatesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpupdatesLayout.createSequentialGroup()
                        .addComponent(updatesLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(163, 163, 163))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpupdatesLayout.createSequentialGroup()
                        .addGroup(jpupdatesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 419, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(updateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(84, 84, 84))))
        );
        jpupdatesLayout.setVerticalGroup(
            jpupdatesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpupdatesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(updatesLabel)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(updateBtn)
                .addContainerGap(42, Short.MAX_VALUE))
        );

        getContentPane().add(jpupdates, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 45, 610, 470));

        jptimetable.setBackground(new java.awt.Color(255, 255, 255));
        jptimetable.setPreferredSize(new java.awt.Dimension(480, 404));

        jLabel12.setBackground(new java.awt.Color(220, 220, 220));
        jLabel12.setFont(new java.awt.Font("Dubai Medium", 1, 36)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(102, 102, 255));
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("TimeTable");

        jScrollPane3.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane3.setCursor(new java.awt.Cursor(java.awt.Cursor.MOVE_CURSOR));

        timeTable.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        timeTable.setFont(new java.awt.Font("Dubai Medium", 0, 14)); // NOI18N
        timeTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "StartTime ", "End Time ", "Monday ", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        timeTable.setCellSelectionEnabled(true);
        timeTable.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        timeTable.setGridColor(new java.awt.Color(51, 51, 51));
        timeTable.setRowHeight(35);
        timeTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        timeTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        timeTable.setShowGrid(true);
        timeTable.getTableHeader().setResizingAllowed(false);
        timeTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane3.setViewportView(timeTable);
        timeTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);

        editButton.setBackground(new java.awt.Color(79, 66, 255));
        editButton.setFont(new java.awt.Font("Dubai Medium", 1, 12)); // NOI18N
        editButton.setForeground(new java.awt.Color(255, 255, 255));
        editButton.setText("Edit");
        editButton.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        editButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        editButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jptimetableLayout = new javax.swing.GroupLayout(jptimetable);
        jptimetable.setLayout(jptimetableLayout);
        jptimetableLayout.setHorizontalGroup(
            jptimetableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 610, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jptimetableLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(editButton, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(jptimetableLayout.createSequentialGroup()
                .addGap(172, 172, 172)
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jptimetableLayout.setVerticalGroup(
            jptimetableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jptimetableLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 109, Short.MAX_VALUE)
                .addComponent(editButton)
                .addContainerGap())
        );

        getContentPane().add(jptimetable, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 45, 610, 470));

        NavigationPanel.setBackground(new java.awt.Color(79, 66, 255));

        Home.setBackground(new java.awt.Color(79, 66, 255));
        Home.setPreferredSize(new java.awt.Dimension(60, 30));
        Home.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                HomeMouseClicked(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(79, 66, 255));
        jLabel1.setFont(new java.awt.Font("Dubai Medium", 0, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Home");
        jLabel1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        javax.swing.GroupLayout HomeLayout = new javax.swing.GroupLayout(Home);
        Home.setLayout(HomeLayout);
        HomeLayout.setHorizontalGroup(
            HomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HomeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        HomeLayout.setVerticalGroup(
            HomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
        );

        updates.setBackground(new java.awt.Color(79, 66, 255));
        updates.setPreferredSize(new java.awt.Dimension(60, 30));
        updates.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                updatesMouseClicked(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Dubai Medium", 0, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Updates");
        jLabel2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel2.setPreferredSize(new java.awt.Dimension(41, 30));

        javax.swing.GroupLayout updatesLayout = new javax.swing.GroupLayout(updates);
        updates.setLayout(updatesLayout);
        updatesLayout.setHorizontalGroup(
            updatesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 96, Short.MAX_VALUE)
            .addGroup(updatesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(updatesLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        updatesLayout.setVerticalGroup(
            updatesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 43, Short.MAX_VALUE)
            .addGroup(updatesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(updatesLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        timetable.setBackground(new java.awt.Color(79, 66, 255));
        timetable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                timetableMouseClicked(evt);
            }
        });

        jLabel3.setBackground(new java.awt.Color(79, 66, 255));
        jLabel3.setFont(new java.awt.Font("Dubai Medium", 0, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Time Table");
        jLabel3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        javax.swing.GroupLayout timetableLayout = new javax.swing.GroupLayout(timetable);
        timetable.setLayout(timetableLayout);
        timetableLayout.setHorizontalGroup(
            timetableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 96, Short.MAX_VALUE)
            .addGroup(timetableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(timetableLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        timetableLayout.setVerticalGroup(
            timetableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 43, Short.MAX_VALUE)
            .addGroup(timetableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(timetableLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        exam.setBackground(new java.awt.Color(79, 66, 255));
        exam.setPreferredSize(new java.awt.Dimension(60, 30));
        exam.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                examMouseClicked(evt);
            }
        });

        jLabel4.setBackground(new java.awt.Color(79, 66, 255));
        jLabel4.setFont(new java.awt.Font("Dubai Medium", 0, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Exam");
        jLabel4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        javax.swing.GroupLayout examLayout = new javax.swing.GroupLayout(exam);
        exam.setLayout(examLayout);
        examLayout.setHorizontalGroup(
            examLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(examLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        examLayout.setVerticalGroup(
            examLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(examLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        logOutBtn.setBackground(new java.awt.Color(79, 66, 255));
        logOutBtn.setFont(new java.awt.Font("Dubai Medium", 0, 14)); // NOI18N
        logOutBtn.setForeground(new java.awt.Color(255, 255, 255));
        logOutBtn.setText("Log Out");
        logOutBtn.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true));
        logOutBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        logOutBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logOutBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout NavigationPanelLayout = new javax.swing.GroupLayout(NavigationPanel);
        NavigationPanel.setLayout(NavigationPanelLayout);
        NavigationPanelLayout.setHorizontalGroup(
            NavigationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(NavigationPanelLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(Home, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(updates, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(timetable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(exam, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 287, Short.MAX_VALUE)
                .addComponent(logOutBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14))
        );
        NavigationPanelLayout.setVerticalGroup(
            NavigationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(NavigationPanelLayout.createSequentialGroup()
                .addGroup(NavigationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(exam, javax.swing.GroupLayout.DEFAULT_SIZE, 43, Short.MAX_VALUE)
                    .addComponent(updates, javax.swing.GroupLayout.DEFAULT_SIZE, 43, Short.MAX_VALUE)
                    .addComponent(timetable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(NavigationPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(NavigationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(logOutBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, NavigationPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(Home, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        getContentPane().add(NavigationPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 810, -1));

        UserLoginInfoPanel.setBackground(new java.awt.Color(204, 204, 255));

        jLabel9.setFont(new java.awt.Font("Dubai Medium", 1, 14)); // NOI18N
        jLabel9.setText("Name : ");

        jLabel10.setFont(new java.awt.Font("Dubai Medium", 1, 14)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("Login Time : ");

        UsernameLabel.setFont(new java.awt.Font("Dubai Medium", 2, 14)); // NOI18N
        UsernameLabel.setText("jLabel11");

        TimeLabel.setFont(new java.awt.Font("Dubai Medium", 2, 14)); // NOI18N
        TimeLabel.setText("jLabel11");

        javax.swing.GroupLayout UserLoginInfoPanelLayout = new javax.swing.GroupLayout(UserLoginInfoPanel);
        UserLoginInfoPanel.setLayout(UserLoginInfoPanelLayout);
        UserLoginInfoPanelLayout.setHorizontalGroup(
            UserLoginInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(UserLoginInfoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(UserLoginInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(UserLoginInfoPanelLayout.createSequentialGroup()
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(UsernameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(UserLoginInfoPanelLayout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(TimeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        UserLoginInfoPanelLayout.setVerticalGroup(
            UserLoginInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(UserLoginInfoPanelLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(UserLoginInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(UsernameLabel))
                .addGap(33, 33, 33)
                .addGroup(UserLoginInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(TimeLabel))
                .addContainerGap(359, Short.MAX_VALUE))
        );

        getContentPane().add(UserLoginInfoPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 40, 200, 480));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void HomeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_HomeMouseClicked

            homePanel.setVisible(true);
            jpupdates.setVisible(false);
            jptimetable.setVisible(false);
            jpexam.setVisible(false);
            Home.setBackground(new Color(176,189,0));
            updates.setBackground(new Color(79,66,255));
            timetable.setBackground(new Color(79,66,255));
            exam.setBackground(new Color(79,66,255));
    }//GEN-LAST:event_HomeMouseClicked

    private void updatesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updatesMouseClicked
        homePanel.setVisible(false);
        jpupdates.setVisible(true);
        jptimetable.setVisible(false);
        jpexam.setVisible(false);
        Home.setBackground(new Color(79,66,255));
        updates.setBackground(new Color(176,189,0));
        timetable.setBackground(new Color(79,66,255));
        exam.setBackground(new Color(79,66,255));
    }//GEN-LAST:event_updatesMouseClicked

    private void timetableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_timetableMouseClicked
        homePanel.setVisible(false);
        jpupdates.setVisible(false);
        jptimetable.setVisible(true);
        jpexam.setVisible(false);
        Home.setBackground(new Color(79,66,255));
        updates.setBackground(new Color(79,66,255));
        timetable.setBackground(new Color(176,189,0));
        exam.setBackground(new Color(79,66,255));
//        TimeTable t1=new TimeTable(loginUsername);
//        t1.setTitle("Timetable");
//        t1.setVisible(true);
//        dispose();
    }//GEN-LAST:event_timetableMouseClicked

    private void examMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_examMouseClicked
        homePanel.setVisible(false);
        jpupdates.setVisible(false);
        jptimetable.setVisible(false);
        jpexam.setVisible(true);
        Home.setBackground(new Color(79,66,255));
        updates.setBackground(new Color(79,66,255));
        timetable.setBackground(new Color(79,66,255));
        exam.setBackground(new Color(176,189,0));
    }//GEN-LAST:event_examMouseClicked

    private void logOutBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logOutBtnActionPerformed
        // TODO add your handling code here:
        LoginPage l1=new LoginPage();
        l1.setVisible(true);
        dispose();
    }//GEN-LAST:event_logOutBtnActionPerformed
    private static void showMessageDialog(String message, String title, int messageType) {
            JOptionPane.showMessageDialog(null, message, title, messageType);
        }
    private void editExamBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editExamBtnActionPerformed
        // TODO add your handling code here:
        Connection con=null;
        PreparedStatement preparedstatement=null;
        ResultSet rs=null;
        try{
            con=DriverManager.getConnection("jdbc:mysql://localhost:3306/studentdatabase","root",DB_PASSWORD);
            preparedstatement=con.prepareStatement("SELECT username FROM students WHERE username=?");
            preparedstatement.setString(1, loginUsername);
            rs=preparedstatement.executeQuery();
            if (rs.next()) {
                editExamBtn.setEnabled(false);
                try {
                    Thread.sleep(4);
                } catch (InterruptedException ex) {
                    Logger.getLogger(MainPage.class.getName()).log(Level.SEVERE, null, ex);
                }
                JOptionPane.showMessageDialog( null,"You are not allowed to edit", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch(SQLException exception){
            exception.printStackTrace();
        } finally {
            try {
                con.close();
                preparedstatement.close();
                rs.close();
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }

        // Open EditableTimeTable window only if the button is enabled
        if (editExamBtn.isEnabled()){
            EditableExamTimeTable e1 = new EditableExamTimeTable(loginUsername);
            e1.setVisible(true);
            dispose();
        }
    }//GEN-LAST:event_editExamBtnActionPerformed

    private void editButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editButtonActionPerformed
        // TODO add your handling code here:
        Connection con=null;
        PreparedStatement preparedstatement=null;
        ResultSet rs=null;
        try{
            con=DriverManager.getConnection("jdbc:mysql://localhost:3306/studentdatabase","root",DB_PASSWORD);
            preparedstatement=con.prepareStatement("SELECT username FROM students WHERE username=?");
            preparedstatement.setString(1, loginUsername);
            rs=preparedstatement.executeQuery();
            if (rs.next()) {
                editButton.setEnabled(false);
                try {
                    Thread.sleep(4);
                } catch (InterruptedException ex) {
                    Logger.getLogger(MainPage.class.getName()).log(Level.SEVERE, null, ex);
                }
                showMessageDialog( "You are not allowed to edit", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch(SQLException exception){
            exception.printStackTrace();
        } finally {
            try {
                con.close();
                preparedstatement.close();
                rs.close();
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }

        // Open EditableTimeTable window only if the button is enabled
        if (editButton.isEnabled()){
            EditableTimeTable e1 = new EditableTimeTable(loginUsername);
            e1.setVisible(true);
            dispose();
        }
    }//GEN-LAST:event_editButtonActionPerformed

    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtnActionPerformed
        // TODO add your handling code here:
             UpdatePanelExample updatePanel = new UpdatePanelExample();
            //jpupdates.add(updatePanel);
            updatePanel.setVisible(true);
            dispose();
    }//GEN-LAST:event_updateBtnActionPerformed
    private void populateTeacherTable(){
        try {
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/teacherdatabase", "root", DB_PASSWORD);

            // Create the table if not exists
            String createTableQuery = "CREATE TABLE IF NOT EXISTS clg(TeacherName VARCHAR(45), Subject VARCHAR(100))";
            try (PreparedStatement createTableStmt = con.prepareStatement(createTableQuery)) {
                createTableStmt.executeUpdate();
            }
            
            //Delete the previous records
            String deleteTableQuery = "DELETE FROM clg";
            try(PreparedStatement deleteTableStmt = con.prepareStatement(deleteTableQuery)){
                deleteTableStmt.executeUpdate();
            }

            String insertDataQuery = "INSERT INTO clg(TeacherName, Subject) VALUES (?, ?)";
            try (PreparedStatement insertDataStmt = con.prepareStatement(insertDataQuery)) {
                // Insert record 1
                insertDataStmt.setString(1, "PD");
                insertDataStmt.setString(2, "SE");
                insertDataStmt.executeUpdate();

                // Insert record 2
                insertDataStmt.setString(1, "RP");
                insertDataStmt.setString(2, "Advance Java");
                insertDataStmt.executeUpdate();

                // Insert record 3
                insertDataStmt.setString(1, "KKG");
                insertDataStmt.setString(2, "Android");
                insertDataStmt.executeUpdate();

                // Insert record 4
                insertDataStmt.setString(1, "SSW");
                insertDataStmt.setString(2, "Computer Network");
                insertDataStmt.executeUpdate();

                // Insert record 5
                insertDataStmt.setString(1, "SSV");
                insertDataStmt.setString(2, "Linear Algebra");
                insertDataStmt.executeUpdate();

                // Insert record 6
                insertDataStmt.setString(1, "PD");
                insertDataStmt.setString(2, "FOA");
                insertDataStmt.executeUpdate();

                // Insert record 7
                insertDataStmt.setString(1, "APR");
                insertDataStmt.setString(2, ".NET");
                insertDataStmt.executeUpdate();
            }


            // Retrieve data using a prepared statement
            String selectDataQuery = "SELECT * FROM clg";
            try (PreparedStatement selectDataStmt = con.prepareStatement(selectDataQuery);
                 ResultSet rs = selectDataStmt.executeQuery()) {

                DefaultTableModel tbl = (DefaultTableModel) jTable1.getModel();

                while (rs.next()) {
                    String TeacherName = rs.getString("TeacherName");
                    String Subject = rs.getString("Subject");

                    String tbData[] = {TeacherName, Subject};
                    tbl.addRow(tbData);
                }
            }

            con.close();
        } catch (SQLException ex) {
            Logger.getLogger(MainPage.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void populateUpdatesTable(){
        try {
            DefaultTableModel model = (DefaultTableModel) updatesTable.getModel();
            model.setRowCount(0);
            PreparedStatement pstmt = null;
            Connection con=null;
            ResultSet rs=null;
            // Fetch data from the database and add rows to the model
            con= DriverManager.getConnection("jdbc:mysql://localhost:3306/new", "root", DB_PASSWORD);
            pstmt = con.prepareStatement("SELECT * FROM messages ORDER BY `timestamp` DESC");
            rs=pstmt.executeQuery();
            while (rs.next()) {
            Object[] row = {
                rs.getString("text"),
                rs.getString("timestamp"),
            };
            model.addRow(row);
            }con.close();
        } catch (SQLException ex) {
            Logger.getLogger(MainPage.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, ex.getMessage(),"Error",JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private void populateTimeTable() {
    // Assuming you have a second JTable named jTable2
        DefaultTableModel model = (DefaultTableModel) timeTable.getModel();
        model.setRowCount(0); // Clear existing rows
        PreparedStatement pstmt = null;
        Connection con=null;
        ResultSet rs=null;
    
    try {
        // Fetch data from the database and add rows to the model
        con= DriverManager.getConnection("jdbc:mysql://localhost:3306/lecturedatabase", "root", DB_PASSWORD);
        pstmt = con.prepareStatement("SELECT * FROM timetable ORDER BY `Start Time` ASC");
        rs=pstmt.executeQuery();

        while (rs.next()) {
            Object[] row = {
                rs.getString("Start Time"),
                rs.getString("End Time"),
                rs.getString("Monday"),
                rs.getString("Tuesday"),
                rs.getString("Wednesday"),
                rs.getString("Thursday"),
                rs.getString("Friday"),
                rs.getString("Saturday")
            };
            model.addRow(row);
        }
        con.close();
    } catch (SQLException ex) {
        ex.printStackTrace();
    }
}
    
    
    private void populateExamTable() {
        // Assuming you have a second JTable named jTable2
            DefaultTableModel model = (DefaultTableModel) examTable.getModel();
            model.setRowCount(0); // Clear existing rows
            PreparedStatement pstmt = null;
            Connection con=null;
            ResultSet rs=null;

        try {
            // Fetch data from the database and add rows to the model
            con= DriverManager.getConnection("jdbc:mysql://localhost:3306/examdatabase", "root", DB_PASSWORD);
            pstmt=con.prepareStatement("SELECT * FROM examtimetable");
            rs=pstmt.executeQuery();

            while (rs.next()) {
                Object[] row = {
                    rs.getString("Sr No."),
                    rs.getString("Date"),
                    rs.getString("S.Y.B.Sc.C.S"),
                };
                model.addRow(row);
            }
            con.close();
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                 MainPage mainPage = new MainPage("DefaultUsername");
                    mainPage.homePanel.setVisible(true);
                    mainPage.Home.setBackground(new Color(176, 189, 0));
                    mainPage.jpupdates.setVisible(false);
                    mainPage.jptimetable.setVisible(false);
                    mainPage.jpexam.setVisible(false);
                    
                    mainPage.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JPanel Home;
    private javax.swing.JPanel NavigationPanel;
    private javax.swing.JLabel TimeLabel;
    private javax.swing.JPanel UserLoginInfoPanel;
    private javax.swing.JLabel UsernameLabel;
    private javax.swing.JButton editButton;
    private javax.swing.JButton editExamBtn;
    private javax.swing.JPanel exam;
    private javax.swing.JTable examTable;
    public javax.swing.JPanel homePanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable jTable1;
    public javax.swing.JPanel jpexam;
    public javax.swing.JPanel jptimetable;
    public javax.swing.JPanel jpupdates;
    private javax.swing.JButton logOutBtn;
    private javax.swing.JTable timeTable;
    private javax.swing.JPanel timetable;
    private javax.swing.JButton updateBtn;
    private javax.swing.JPanel updates;
    private javax.swing.JLabel updatesLabel;
    private javax.swing.JTable updatesTable;
    // End of variables declaration//GEN-END:variables
}
